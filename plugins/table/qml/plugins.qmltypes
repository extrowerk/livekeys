import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'Livekeys 1.9.1'

Module {
    dependencies: []
    Component { name: "QAbstractListModel"; prototype: "QAbstractItemModel" }
    Component { name: "QAbstractTableModel"; prototype: "QAbstractItemModel" }
    Component {
        name: "lv::LocalTable"
        prototype: "lv::Table"
        exports: ["table/LocalTable 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "readFromFile"
            Parameter { name: "path"; type: "QString" }
            Parameter { name: "options"; type: "QJSValue" }
        }
        Method {
            name: "writeToFile"
            Parameter { name: "path"; type: "QString" }
            Parameter { name: "options"; type: "QJSValue" }
        }
        Method { name: "clear" }
    }
    Component {
        name: "lv::Table"
        prototype: "lv::Shared"
        exports: ["table/Table 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "model"; type: "lv::TableModel"; isReadonly: true; isPointer: true }
    }
    Component {
        name: "lv::TableColumn"
        prototype: "lv::Table"
        exports: ["table/TableColumn 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "table"; type: "lv::Table"; isPointer: true }
        Property { name: "column"; type: "QJSValue" }
        Method {
            name: "__tableRowsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Method {
            name: "__tableRowsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Method {
            name: "__tableDataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
            Parameter { name: "roles"; type: "QVector<int>" }
        }
        Method {
            name: "__tableDataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Method { name: "__tableReset" }
    }
    Component {
        name: "lv::TableConcat"
        prototype: "lv::Table"
        exports: ["table/TableConcat 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "table1"; type: "lv::Table"; isPointer: true }
        Property { name: "table2"; type: "lv::Table"; isPointer: true }
        Method {
            name: "__table1RowsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Method {
            name: "__table1RowsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Method {
            name: "__table1DataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
            Parameter { name: "roles"; type: "QVector<int>" }
        }
        Method {
            name: "__table1DataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Method { name: "__table1Reset" }
        Method {
            name: "__table2RowsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Method {
            name: "__table2RowsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Method {
            name: "__table2DataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
            Parameter { name: "roles"; type: "QVector<int>" }
        }
        Method {
            name: "__table2DataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Method { name: "__table2Reset" }
    }
    Component {
        name: "lv::TableGroup"
        prototype: "QObject"
        exports: ["table/TableGroup 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "table"; type: "lv::Table"; isPointer: true }
        Property { name: "all"; type: "QJSValue" }
        Property { name: "reduce"; type: "QJSValue" }
        Property { name: "reduceInit"; type: "QJSValue" }
        Property { name: "result"; type: "QJSValue" }
        Method { name: "__tableReset" }
    }
    Component {
        name: "lv::TableModel"
        prototype: "QAbstractTableModel"
        exports: ["table/TableModel 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "header"; type: "lv::TableModelHeader"; isReadonly: true; isPointer: true }
        Property { name: "rowInfo"; type: "lv::TableModelRowsInfo"; isReadonly: true; isPointer: true }
        Property { name: "table"; type: "lv::Table"; isReadonly: true; isPointer: true }
        Signal { name: "complete" }
        Signal { name: "rowAdded" }
        Signal { name: "columnAdded" }
        Method {
            name: "insertRow"
            Parameter { name: "row"; type: "QJSValue" }
        }
        Method {
            name: "updateRow"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "row"; type: "QJSValue" }
        }
        Method {
            name: "removeRow"
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "totalRows"; type: "int" }
        Method {
            name: "rowAt"
            type: "QJSValue"
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "totalFields"; type: "int" }
        Method {
            name: "insertField"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "field"; type: "QJSValue" }
        }
        Method {
            name: "updateField"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "info"; type: "QJSValue" }
        }
        Method {
            name: "removeField"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "select"
            type: "bool"
            Parameter { name: "column"; type: "QJSValue" }
            Parameter { name: "row"; type: "QJSValue" }
        }
        Method {
            name: "deselect"
            type: "bool"
            Parameter { name: "column"; type: "QJSValue" }
            Parameter { name: "row"; type: "QJSValue" }
        }
        Method {
            name: "deselect"
            type: "bool"
            Parameter { name: "column"; type: "QJSValue" }
        }
        Method { name: "deselect"; type: "bool" }
        Method { name: "clearTable" }
    }
    Component {
        name: "lv::TableModelHeader"
        prototype: "QAbstractListModel"
        exports: ["table/TableModelHeader 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "defaultColumnWidth"; type: "int" }
        Property { name: "contentWidth"; type: "int"; isReadonly: true }
        Signal {
            name: "defaultColumnWidthChanged"
            Parameter { name: "defaultColumnWidth"; type: "int" }
        }
        Method {
            name: "updateColumnWidth"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "width"; type: "int" }
        }
        Method {
            name: "columnWidth"
            type: "int"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "lv::TableModelRowsInfo"
        prototype: "QAbstractTableModel"
        exports: ["table/TableModelRowsInfo 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "defaultRowHeight"; type: "int" }
        Property { name: "contentHeight"; type: "int"; isReadonly: true }
        Method {
            name: "updateRowHeight"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "height"; type: "int" }
        }
        Method {
            name: "rowHeight"
            type: "int"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "lv::TableRowEach"
        prototype: "lv::Table"
        exports: ["table/TableRowEach 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "table"; type: "lv::Table"; isPointer: true }
        Property { name: "fn"; type: "QJSValue" }
        Method {
            name: "__tableRowsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Method {
            name: "__tableRowsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Method {
            name: "__tableDataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
            Parameter { name: "roles"; type: "QVector<int>" }
        }
        Method {
            name: "__tableDataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Method { name: "__tableReset" }
    }
    Component {
        name: "lv::TableToList"
        prototype: "QObject"
        exports: ["table/TableToList 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "table"; type: "lv::Table"; isPointer: true }
        Property { name: "result"; type: "QJSValue"; isReadonly: true }
        Method {
            name: "__tableRowsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Method {
            name: "__tableRowsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Method {
            name: "__tableDataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
            Parameter { name: "roles"; type: "QVector<int>" }
        }
        Method {
            name: "__tableDataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Method { name: "__tableReset" }
    }
}
